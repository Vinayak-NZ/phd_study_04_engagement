p <- final_data_key_vars %>%
ggplot( aes(x=proportion_items_completed, fill=version)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
install.packages("hrbrthemes")
library(hrbrthemes)
p <- final_data_key_vars %>%
ggplot( aes(x=proportion_items_completed, fill=version)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
p
aggregate(final_data_key_vars$proportion_items_completed, list(final_data_key_vars$version), FUN = mean)
aggregate(final_data_key_vars$proportion_items_completed, list(final_data_key_vars$version), FUN = mean, na.action = na.omit)
aggregate(final_data_key_vars$proportion_items_completed, list(final_data_key_vars$version), FUN = mean, na.rm = TRUE)
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/00_load_data.R")
View(app_v1_passive_data)
View(app_v2_passive_data)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
## ---- rename-app-id-passive
names(app_v1_passive_data)[names(app_v1_passive_data) == "UUID"] <- "id"
names(app_v2_passive_data)[names(app_v2_passive_data) == "UUID"] <- "id"
## ---- create-version-indicator
app_v1_passive_data$version <- "Version 1"
app_v2_passive_data$version <- "Version 2"
## ---- filter-pregnant-women
app_v1_active_data <- app_v1_active_data[app_v1_active_data$Audience == "A1", ]
app_v2_active_data <- app_v2_active_data[app_v2_active_data$Audience == "A1", ]
app_v1_passive_data <- app_v1_passive_data[app_v1_passive_data$Audience == "A1", ]
app_v2_passive_data <- app_v2_passive_data[app_v2_passive_data$Audience == "A1", ]
## ---- rename-codename-variable
names(app_v1_passive_data)[names(app_v1_passive_data) == "Codename"] <- "codename_id"
names(app_v2_passive_data)[names(app_v2_passive_data) == "Codename"] <- "codename_id"
## ---- rename-value-variable
names(app_v1_passive_data)[names(app_v1_passive_data) == "Value"] <- "item_response"
names(app_v2_passive_data)[names(app_v2_passive_data) == "Value"] <- "item_response"
## ---- format-merge-variables
app_v1_passive_data$codename_id <- iconv(app_v1_passive_data$codename_id,
"latin1", "ASCII", sub="")
app_v1_item_page_match$codename_id <- iconv(app_v1_item_page_match$codename_id,
"latin1", "ASCII", sub="")
app_v1_item_page_match$page_id <- iconv(app_v1_item_page_match$page_id,
"latin1", "ASCII", sub="")
app_v1_page_count$page_id <- iconv(app_v1_page_count$page_id,
"latin1", "ASCII", sub="")
app_v2_passive_data$codename_id <- iconv(app_v2_passive_data$codename_id,
"latin1", "ASCII", sub="")
app_v2_item_page_match$codename_id <- iconv(app_v2_item_page_match$codename_id,
"latin1", "ASCII", sub="")
View(app_v2_item_page_match)
View(app_v1_item_page_match)
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
aggregate(final_data_key_vars$proportion_items_completed, list(final_data_key_vars$version), FUN = mean, na.rm = TRUE)
plot(final_data_key_vars$proportion_pages_viewed, final_data_key_vars$proportion_items_completed)
unique_cases <-
distinct(final_data_key_vars, version, id, .keep_all = TRUE)
uniqe_cases$progress_score <-
(unique_cases$lessons_completed*100)*0.5 +
(unique_cases$proportion_pages_viewed*0.3) +
(unique_cases$proportion_items_completed*0.2)
unique_cases$progress_score <-
(unique_cases$lessons_completed*100)*0.5 +
(unique_cases$proportion_pages_viewed*0.3) +
(unique_cases$proportion_items_completed*0.2)
summary(unique_cases$progress_score)
View(unique_cases)
hist(unique_cases$progress_score)
test <- unique_cases[unique_cases$progress_score > 400, ]
View(test)
unique_cases <-
distinct(final_data_key_vars, version, id, .keep_all = TRUE)
unique_cases$progress_score <-
(unique_cases$lessons_completed*10)*0.5 +
(unique_cases$proportion_pages_viewed*0.3) +
(unique_cases$proportion_items_completed*0.2)
summary(unique_cases$progress_score)
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
summary(final_data_key_vars$proportion_items_completed)
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
unique_cases <-
distinct(final_data_key_vars, version, id, .keep_all = TRUE)
pca_input <- unique_cases[, c("proportion_pages_viewed",
"lessons_viewed",
"proportion_items_completed")]
data_normalised <- scale(pca_input)
head(data_normalised)
corr_matrix <- cor(data_normalised)
ggcorrplot(corr_matrix)
data.pca <- princomp(corr_matrix)
summary(data.pca)
data.pca$scores[1]
data.pca$scores
fviz_eig(data.pca, addlabels = TRUE)
fviz_pca_var(data.pca, col.var = "black")
pca_results <- principal(pca_input, nfactors = 1)
pca.results <- princomp(pca_input)
pca.results$scores
unique_cases <-
distinct(final_data_key_vars, version, id, .keep_all = TRUE)
unique_cases$progress_score <-
(unique_cases$lessons_completed*10)*0.5 +
(unique_cases$proportion_pages_viewed*0.3) +
(unique_cases$proportion_items_completed*0.2)
unique_cases_subset <-
unique_cases_subset[, c("version", "id", "progress_score")]
final_data_all_vars <- merge(final_data_key_vars,
unique_cases_subset,
by = c("version", "id"))
unique_cases_subset <-
unique_cases[, c("version", "id", "progress_score")]
final_data_all_vars <- merge(final_data_key_vars,
unique_cases_subset,
by = c("version", "id"))
unique_cases <-
distinct(final_data_all_vars, version, id, .keep_all = TRUE)
unique_cases <-
as.data.frame(unique_cases)
variables_impute <- c("hapa2_t0",
"hapa3_t0",
"hapa4_t0",
"hapa5_t0",
"hapa1_t1",
"hapa2_t1")
remainder <- unique_cases[, !(names(unique_cases) %in% variables_impute)]
to_impute <- unique_cases[, c("version",
"id",
variables_impute)]
init <- mice(to_impute, maxit = 0)
meth <- init$method
predM <- as.matrix(init$predictorMatrix)
predM[, "version"] <- 0
predM[, "id"] <- 0
predM[, "hapa1_t1"] <- 0
predM[, "hapa2_t1"] <- 0
meth[c("version", "id", "hapa2_t0", "hapa3_t0", "hapa4_t0", "hapa5_t0")] = ""
imputed <- mice(to_impute,
method=meth,
predictorMatrix=predM,
m=5)
imputed$data
View(imputed$data)
imputed$imp
View(imputed$imp)
summary(to_impute$hapa2_t0)
summary(to_impute$hapa2_t1)
imputed$iteration
imputed$m
imputed$post
View(imputed$imp[["hapa3_t0"]])
View(imputed$imp[["hapa1_t1"]])
long <- complete(imputed, action = 'long', include = TRUE)
View(long)
names(predM)
predM
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
source("R/04_process_data.R")
source("R/04_type_one_error.R")
source("R/04_process_data.R")
model_input <- post_imputed[complete.cases(post_imputed), ]
model_1 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
1,
data = model_input)
model_2 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
hapa2_t1,
data = model_input)
anova(model_1, model_2)
model_3 <- update(model_2, . ~ . + hapa1_t1)
anova(model_2, model_3)
model_4 <- update(model_3, . ~ . + co_creation_method)
post_imputed$co_creation_method <-
ifelse(post_imputed$version == "Version 1", 0, 1)
post_imputed <- post_imputed[complete.cases(post_imputed), ]
model_1 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
1,
data = model_input)
model_2 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
hapa2_t1,
data = model_input)
anova(model_1, model_2)
model_3 <- update(model_2, . ~ . + hapa1_t1)
anova(model_2, model_3)
model_4 <- update(model_3, . ~ . + co_creation_method)
anova(model_3, model_4)
model_1 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
1,
data = post_imputed)
model_2 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
hapa2_t1,
data = post_imputed)
anova(model_1, model_2)
model_3 <- update(model_2, . ~ . + hapa1_t1)
anova(model_2, model_3)
model_4 <- update(model_3, . ~ . + co_creation_method)
anova(model_3, model_4)
Anova(model_4)
model_summary <- summary(model_4)
model_summary
install.packages("rstanarm")
library(rstanarm)
model_bayes <- stan_glm(progress_score ~
hapa2_t1 +
hapa1_t1 +
co_creation_method,
data = post_imputed,
seed = 111)
print(model_bayes, digits = 3)
install.packages("bayesplot")
library(bayesplot)
mcmc_dens(model_bayes, pars = c("co_creation_method")) +
vline_at(7.583, col = "red")
install.packages("bayestestR")
library(bayestestR)
describe_posterior(model_bayes)
model_bayes <- stan_glm(cbine(total_log_in,
progress_score) ~
hapa2_t1 +
hapa1_t1 +
co_creation_method,
data = post_imputed,
seed = 111)
model_bayes <- stan_glm(cbind(total_log_in,
progress_score) ~
hapa2_t1 +
hapa1_t1 +
co_creation_method,
data = post_imputed,
seed = 111)
model_bayes <- stan_mvmer(
formula = list(
total_log_in ~ hapa2_t1 + hapa1_t1 + co_creation_method,
progress_score ~ hapa2_t1 + hapa1_t1 + co_creation_method),
data = post_imputed,
chains = 1,
cores = 1,
seed = 111,
iter = 1000)
?stan_glm
model_bayes <- stan_glm(
formula = list(
total_log_in ~ hapa2_t1 + hapa1_t1 + co_creation_method,
progress_score ~ hapa2_t1 + hapa1_t1 + co_creation_method),
data = post_imputed,
seed = 111)
model_bayes <- stan_mvmer(
formula = list(
total_log_in ~ hapa2_t1 + hapa1_t1 + co_creation_method + (1 | id),
progress_score ~ hapa2_t1 + hapa1_t1 + co_creation_method + (1 | id)),
data = post_imputed,
chains = 1,
cores = 1,
seed = 111,
iter = 1000)
install.packages("BNSP")
model <- total_log_in | progress_score ~ hapa2_t1 + hapa1_t1 + co_creation_method
library(BNSP)
multiv <- mvrm(formula = model,
data = post_imputed,
sweeps = 10000,
burn = 5000,
thin = 2,
seed = 1)
multiv <- mvrm(formula = model,
data = post_imputed,
sweeps = 10000,
burn = 5000,
thin = 2,
seed = 1,
StorageDir = getwd())
plot(multiv)
View(multiv)
model_bayes <- stan_mvmer(
formula = list(
total_log_in ~ hapa2_t1 + hapa1_t1 + co_creation_method + (1 | id),
progress_score ~ hapa2_t1 + hapa1_t1 + co_creation_method + (1 | id)),
data = post_imputed,
chains = 1,
cores = 1,
seed = 111,
iter = 1000)
install.packages("brm")
install.packages("brms")
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
library(brms)
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
# Compile packages using all cores
Sys.setenv(MAKEFLAGS = paste0("-j",parallel::detectCores()))
install.packages(c("StanHeaders","rstan"),type="source")
example(stan_model, package = "rstan", run.dontrun = TRUE)
source("R/00_load_data.R")
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
source("R/04_type_one_error.R")
source("R/04_process_data.R")
library(brms)
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
remove.packages(c("rstan", "StanHeaders"))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
library(brms)
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
remove.packages(c("rstan", "StanHeaders"))
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
.libPaths()
remove.packages(c("rstan", "StanHeaders"))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/"))
remove.packages(c("rstan", "StanHeaders"))
, getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
source("R/04_type_one_error.R")
source("R/04_process_data.R")
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
Sys.setenv(BINPREF = "C:/BuildTools/4.2/x86_64-w64-mingw32.static.posix/bin")
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
Sys.setenv(BINPREF = "C:/BuildTools/4.2/x86_64-w64-mingw32.static.posix/bin/")
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
Sys.setenv(BINPREF = "C:/RBuildTools/4.2/x86_64-w64-mingw32.static.posix/bin/")
bform1 <-
bf(mvbind(total_log_in, progress_score) ~ hapa2_t1)
fit1 <- brm(bform1, data = post_imputed, chains = 2, cores = 2)
example(stan_model, package = "rstan", run.dontrun = TRUE)
.libPaths()
remove.packages(c("rstan", "StanHeaders"))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
remove.packages(c("rstan", "StanHeaders"))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
example(stan_model, package = "rstan", run.dontrun = TRUE)
Sys.setenv(BINPREF = "C:/RBuildTools/4.2/x86_64-w64-mingw32.static.posix/bin/")
example(stan_model, package = "rstan", run.dontrun = TRUE)
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
source("R/04_type_one_error.R")
source("R/04_process_data.R")
write.csv(post_imputed,
"C:/Users/vanandkuma/Documents/test.csv", row.names=FALSE)
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
source("R/04_type_one_error.R")
table(unique_cases$version)
source("R/04_process_data.R")
post_imputed$co_creation_method <-
ifelse(post_imputed$version == "Version 1", 0, 1)
post_imputed <- post_imputed[complete.cases(post_imputed), ]
model_1 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
1,
data = post_imputed)
model_2 <- lm(cbind(total_log_in,
progress_score,
action_plan,
average_time_spent,
days_between) ~
hapa2_t1,
data = post_imputed)
anova(model_1, model_2)
model_3 <- update(model_2, . ~ . + hapa1_t1)
anova(model_2, model_3)
model_4 <- update(model_3, . ~ . + co_creation_method)
anova(model_3, model_4)
Anova(model_4)
model_summary <- summary(model_4)
model_summary
source("R/00_load_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_format_active_data.R")
source("R/01_format_passive_data.R")
source("R/02_format_active_data_hapa.R")
source("R/02_format_active_data_safety.R")
source("R/02_format_baseline.R")
source("R/02_join_data.R")
source("R/03_prepare_data.R")
source("R/04_derive_variables.R")
source("R/04_type_one_error.R")
source("R/04_process_data.R")
View(post_imputed)
View(final_data_all_vars)
View(app_v1_baseline)
